<?php
/**
 * Created by PhpStorm.
 * User: Prabhashi
 * Date: 12/21/2017
 * Time: 9:52 AM
 */

namespace EffectiveSolutions\UserBundle\Validator\Constraints;


use Doctrine\ORM\EntityManager;
use Symfony\Component\Validator\Constraint;
use Symfony\Component\Validator\Tests\Fixtures\ConstraintAValidator;

class EmailValidator extends ConstraintAValidator
{

//    public function validate($value, Constraint $constraint)
//    {
//        return parent::validate($value, $constraint); // TODO: Change the autogenerated stub
//    }

    private $em;

    public function __construct(EntityManager $entityManager)
    {
        $this->em = $entityManager;
    }


    public function validate($user, Constraint $constraint)
    {

        $userRepo = $this->em->getRepository('AppBundle:User');

        $email = $user->getEmail();
        $tempEmail = $user->getTemporaryEmail();

//        var_dump($email);
//        var_dump($tempEmail);
//        exit();

        $query = $userRepo->createQueryBuilder('p')
            ->orWhere('p.email = :email')
            ->orWhere('p.temporaryEmail = :email')
            ->orWhere('p.email = :tempEmail')
            ->orWhere('p.temporaryEmail = :tempEmail')
            ->setParameter('email', $email)
            ->setParameter('tempEmail', $tempEmail)
            ->getQuery();

        $users = $query->getResult();

        if (is_array($users) && count($users) > 0) {

            if($user->getId() == $users[0]->getId()){

            }
            elseif ($tempEmail == null && ($email == $users[0]->getEmail() || $email == $users[0]->getTemporaryEmail())) {
                $this->context->buildViolation($constraint->message)
                    ->addViolation();
            }

//            if($tempEmail == $users[0]->getEmail() || $tempEmail == $users[0]->getTemporaryEmail()){
            elseif ($email != $users[0]->getEmail()) {
                $this->context->buildViolation($constraint->message)
                    ->addViolation();
            }

        }
    }
}